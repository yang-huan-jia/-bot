import discord
from discord.ext import commands
from core import classes
from discord.utils import get
import json

class message(commands.Cog):
  def __init__(self,bot):
    self.bot=bot

  @commands.Cog.listener()
  async def on_member_join(self, member):
    async def update_data(users, user):
      if not f'{user.id}' in users:
        users[f'{user.id}'] = {}
        users[f'{user.id}']['experience'] = 0
        users[f'{user.id}']['level'] = 1
    
    async def add_experience(users, user, exp):
      [f'{user.id}']['experience'] += exp

    async def level_up(users, user, msg):
      with open('levels.json', 'r', encoding = 'utf8')as g:
        levels = json.load(g)
      experience = users[f'{user.id}']['experience']
      lvl_start = users[f'{user.id}']['level']
      lvl_end = int(experience ** (1/4))
      if lvl_start < lvl_end:
        await msg.channel.send(f'{user.mention}升級了！ 等級 - {lvl_end}')
        users[f'{user.id}']['level'] = lvl_end
    with open('users.json', 'r', encoding = 'utf8')as f:
      users = json.load(f)
    await update_data(users, member)
    with open('users.json', 'w', encoding = 'utf8')as f:
      json.dump(users, f, indents = 4)
  
  async def update_data(users, user):
    if not f'{user.id}' in users:
      users[f'{user.id}'] = {}
      users[f'{user.id}']['experience'] = 0
      users[f'{user.id}']['level'] = 1
  
  async def add_experience(users, user, exp):
    [f'{user.id}']['experience'] += exp

  async def level_up(users, user, msg):
    with open('levels.json', 'r', encoding = 'utf8')as g:
      levels = json.load(g)
    experience = users[f'{user.id}']['experience']
    lvl_start = users[f'{user.id}']['level']
    lvl_end = int(experience ** (1/4))
    if lvl_start < lvl_end:
      await msg.channel.send(f'{user.mention}升級了！ 等級 - {lvl_end}')
      users[f'{user.id}']['level'] = lvl_end

  @commands.Cog.listener()
  async def on_message(self, msg):
    async def update_data(users, user):
      if not f'{user.id}' in users:
        users[f'{user.id}'] = {}
        users[f'{user.id}']['experience'] = 0
        users[f'{user.id}']['level'] = 1
    
    async def add_experience(users, user, exp):
      [f'{user.id}']['experience'] += exp

    async def level_up(users, user, msg):
      with open('levels.json', 'r', encoding = 'utf8')as g:
        levels = json.load(g)
      experience = users[f'{user.id}']['experience']
      lvl_start = users[f'{user.id}']['level']
      lvl_end = int(experience ** (1/4))
      if lvl_start < lvl_end:
        await msg.channel.send(f'{user.mention}升級了！ 等級 - {lvl_end}')
        users[f'{user.id}']['level'] = lvl_end
      with open('users.json', 'r', encoding = 'utf8')as f:
       users = json.load(f)
      await update_data(users, msg.author)
      await add_experience(users, msg.author, 5)
      await level_up(users, msg.author, msg)
      with open('users.json', 'w', encoding = 'utf8')as f:
        json.dump(users, f, indents = 4)

  @commands.Cog.listener()
  async def on_messaage(self, message):
    if message.author.bot:
      return
    async with self.bot.db.cursor() as cursor:
      await cursor.execute("SELECT xp FROM levels WHERE user = ? AND guild = ?", (message.author.id, message.guild.id,))
      xp = await cursor.fetchone()
      await cursor.execute("SELECT level FROM levels WHERE user = ? AND guild = ?", (message.author.id, message.guild.id,))
      level = await cursor.fetchone()
      if not level or level == 0:
        await cursor.execute("INSERT INTO levels (guild, user, level, xp) VALUES (?, ?, ?, ?)", (message.guild.id, message.author.id, 1, 0,))
        await self.bot.db.commit()
      try:
        xp=xp[0]
        level=level[0]
      except TypeError:
        xp = 0
        level = 0
      xp += random.randint(1,15)
      await cursor.execute("UPDATE levels SET xp = ? WHERE user = ? AND guild = ?", (xp, message.author.id, message.guild.id))
      if xp >= round((10*(level+1) ** (0.06*level))+ level*47):
        level += 1
        await cursor.execute("UPDATE levels SET xp = 0 AND SET level = ? WHERE user = ? AND guild = ?", (level, message.author.id, message.guild.id))
        await message.channel.send(f"{message.author.mention} 升到等級 {level} 了！")
      await self.bot.db.commit()

      if not xp or not level:
        await cursor.execute("INSERT INTO levels (level, xp, user, guild) VALUES (?, ?, ?, ?)", (1, 0, member.id, ctx.guild.id,))
        await self.bot.db.commit()

def setup(bot):
  bot.add_cog(message(bot))